syntax = "proto3";

package auction;

option go_package = "auction-system/pkg/api";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service AuctionService {
    rpc CreateAuction(CreateAuctionRequest) returns (CreateAuctionResponse) {
        option (google.api.http) = {
            post: "/api/v1/auctions"
            body: "*"
        };
    }
    
    rpc GetAuction(GetAuctionRequest) returns (GetAuctionResponse) {
        option (google.api.http) = {
            get: "/api/v1/auctions/{id}"
        };
    }
    
    rpc UpdateAuction(UpdateAuctionRequest) returns (UpdateAuctionResponse) {
        option (google.api.http) = {
            put: "/api/v1/auctions/{id}"
            body: "*"
        };
    }
    
    rpc ListAuctions(ListAuctionsRequest) returns (ListAuctionsResponse) {
        option (google.api.http) = {
            get: "/api/v1/auctions"
        };
    }
}

message Auction {
    int64 id = 1;
    int64 lot_id = 2;
    double start_price = 3;
    double min_step = 4;
    double current_price = 5;
    google.protobuf.Timestamp start_time = 6;
    google.protobuf.Timestamp end_time = 7;
    string status = 8;
    int64 winner_id = 9;
    int64 winner_bid_id = 10;
    google.protobuf.Timestamp created_at = 11;
    google.protobuf.Timestamp updated_at = 12;
}

message CreateAuctionRequest {
    int64 lot_id = 1;
    double start_price = 2;
    double min_step = 3;
    google.protobuf.Timestamp start_time = 4;
    google.protobuf.Timestamp end_time = 5;
}

message CreateAuctionResponse {
    Auction auction = 1;
}

message GetAuctionRequest {
    int64 id = 1;
}

message GetAuctionResponse {
    Auction auction = 1;
}

message UpdateAuctionRequest {
    int64 id = 1;
    double start_price = 2;
    double min_step = 3;
    google.protobuf.Timestamp start_time = 4;
    google.protobuf.Timestamp end_time = 5;
    string status = 6;
}

message UpdateAuctionResponse {
    Auction auction = 1;
}

message ListAuctionsRequest {
    int32 page_size = 1;
    int32 page_number = 2;
    optional string status = 3;
}

message ListAuctionsResponse {
    repeated Auction auctions = 1;
    int32 total_count = 2;
}
